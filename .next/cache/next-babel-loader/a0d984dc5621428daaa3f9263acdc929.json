{"ast":null,"code":"var _jsxFileName = \"/Users/seanblanton/Documents/Sites/blanton/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/Layout\";\nimport { postsData } from \"../utils/index.js\";\nimport siteData from \"../data/site.js\";\nimport { default as externalPostData } from \"../data/externalPosts.js\";\nimport { Header } from \"@/components\";\nimport { About, BookList, PostList, Footer } from \"@/components\";\nimport { Grid, GridItem } from \"@/system\";\nimport Atoms from \"@/system/atoms\";\n\nconst IndexPage = ({\n  posts\n}) => __jsx(Layout, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 2\n  }\n}, __jsx(Grid, {\n  columns: Atoms.grid.columns,\n  gap: Atoms.grid.gap,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }\n}, __jsx(GridItem, {\n  span: 5,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 4\n  }\n}, __jsx(Header, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, siteData.title, \" \\u2014\\xA0\", siteData.role)), __jsx(GridItem, {\n  span: Atoms.grid.gridSection,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 4\n  }\n}, __jsx(PostList, {\n  data: posts,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n})), __jsx(GridItem, {\n  span: Atoms.grid.gridSection,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 4\n  }\n}, __jsx(About, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }\n})), __jsx(GridItem, {\n  span: Atoms.grid.gridSection,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 4\n  }\n}, __jsx(BookList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n})), __jsx(GridItem, {\n  span: 6,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 4\n  }\n}, __jsx(Footer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }\n}))));\n\nexport default IndexPage;\nexport async function getStaticProps() {\n  const internalPosts = Array.from(postsData.values());\n  const externalPosts = externalPostData.map(post => {\n    const options = {\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\"\n    };\n    const formattedDate = new Date(post.date).toLocaleDateString(\"en-IN\", options);\n    return {\n      frontMatter: _objectSpread(_objectSpread({}, post), {}, {\n        date: formattedDate\n      })\n    };\n  });\n  const posts = [...internalPosts, ...externalPosts].sort((a, b) => {\n    return Number(new Date(b.frontMatter.date).getTime() - Number(new Date(a.frontMatter.date).getTime()));\n  }).filter(post => !post.frontMatter.private);\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/pages/index.tsx"],"names":["Layout","postsData","siteData","default","externalPostData","Header","About","BookList","PostList","Footer","Grid","GridItem","Atoms","IndexPage","posts","grid","columns","gap","title","role","gridSection","getStaticProps","internalPosts","Array","from","values","externalPosts","map","post","options","month","day","year","formattedDate","Date","date","toLocaleDateString","frontMatter","sort","a","b","Number","getTime","filter","private","props"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\nimport { postsData } from \"../utils/index.js\";\nimport siteData from \"../data/site.js\";\nimport { default as externalPostData } from \"../data/externalPosts.js\";\nimport { Header } from \"@/components\";\nimport { About, BookList, PostList, Footer } from \"@/components\";\nimport { Post } from \"../interfaces\";\nimport { Grid, GridItem } from \"@/system\";\nimport Atoms from \"@/system/atoms\";\n\ntype Props = {\n\tposts: Post[];\n};\n\nconst IndexPage = ({ posts }: Props) => (\n\t<Layout>\n\t\t<Grid columns={Atoms.grid.columns} gap={Atoms.grid.gap}>\n\t\t\t<GridItem span={5}>\n\t\t\t\t<Header>\n\t\t\t\t\t{siteData.title} — {siteData.role}\n\t\t\t\t</Header>\n\t\t\t</GridItem>\n\n\t\t\t<GridItem span={Atoms.grid.gridSection}>\n\t\t\t\t<PostList data={posts} />\n\t\t\t</GridItem>\n\n\t\t\t<GridItem span={Atoms.grid.gridSection}>\n\t\t\t\t<About />\n\t\t\t</GridItem>\n\n\t\t\t<GridItem span={Atoms.grid.gridSection}>\n\t\t\t\t<BookList />\n\t\t\t</GridItem>\n\n\t\t\t<GridItem span={6}>\n\t\t\t\t<Footer />\n\t\t\t</GridItem>\n\t\t</Grid>\n\t</Layout>\n);\n\nexport default IndexPage;\n\nexport async function getStaticProps() {\n\tconst internalPosts = Array.from(postsData.values());\n\tconst externalPosts = externalPostData.map((post) => {\n\t\tconst options = { month: \"long\", day: \"numeric\", year: \"numeric\" };\n\t\tconst formattedDate = new Date(post.date).toLocaleDateString(\n\t\t\t\"en-IN\",\n\t\t\toptions\n\t\t);\n\n\t\treturn {\n\t\t\tfrontMatter: { ...post, date: formattedDate },\n\t\t};\n\t});\n\n\tconst posts = [...internalPosts, ...externalPosts]\n\t\t.sort((a, b) => {\n\t\t\treturn Number(\n\t\t\t\tnew Date(b.frontMatter.date).getTime() -\n\t\t\t\t\tNumber(new Date(a.frontMatter.date).getTime())\n\t\t\t);\n\t\t})\n\t\t.filter((post) => !post.frontMatter.private);\n\n\treturn {\n\t\tprops: { posts },\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}