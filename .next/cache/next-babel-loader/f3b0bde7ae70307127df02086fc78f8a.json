{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/seanblanton/Documents/Sites/blanton/pages/blog/[...slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: calc(var(--font-size) * 48);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Head from \"next/head\";\nimport hydrate from \"next-mdx-remote/hydrate\";\nimport { Atoms } from \"@/system\";\nimport { Header, Layout, Footer } from \"@/components\";\nimport { Grid, GridItem } from \"@/system\";\nimport siteData from \"../../data/site.js\";\nimport { components as AllComponents } from \"@/system/DesignSystemProvider\";\nimport styled from \"@emotion/styled\";\nvar Page = styled.article(_templateObject());\n_c = Page;\nvar components = AllComponents;\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var source = _ref.source,\n      frontMatter = _ref.frontMatter;\n  var content = hydrate(source, {\n    components: components\n  });\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, siteData.title, \" \\u2014\\xA0\", frontMatter.title)), __jsx(Layout, {\n    showTitle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, __jsx(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Grid, {\n    columns: Atoms.grid.columns,\n    gap: Atoms.grid.gap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, __jsx(GridItem, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, frontMatter.title)), __jsx(GridItem, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, content), __jsx(GridItem, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }))))));\n}\n_c2 = Post;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"Post\");","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/pages/blog/[...slug].tsx"],"names":["Head","hydrate","Atoms","Header","Layout","Footer","Grid","GridItem","siteData","components","AllComponents","styled","Page","article","Post","source","frontMatter","content","title","grid","columns","gap"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,SAASC,KAAT,QAAsB,UAAtB;AAEA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,QAAuC,cAAvC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,UAA/B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAASC,UAAU,IAAIC,aAAvB,QAA4C,+BAA5C;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,IAAI,GAAGD,MAAM,CAACE,OAAV,mBAAV;KAAMD,I;AAIN,IAAMH,UAAU,GAAGC,aAAnB;;AAEA,eAAe,SAASI,IAAT,OAA4C;AAAA,MAA5BC,MAA4B,QAA5BA,MAA4B;AAAA,MAApBC,WAAoB,QAApBA,WAAoB;AACzD,MAAMC,OAAO,GAAGhB,OAAO,CAACc,MAAD,EAAS;AAAEN,IAAAA,UAAU,EAAVA;AAAF,GAAT,CAAvB;AAEA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QAAQ,CAACU,KADZ,iBACsBF,WAAW,CAACE,KADlC,CADF,CADF,EAOE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAE,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,OAAO,EAAEhB,KAAK,CAACiB,IAAN,CAAWC,OAA1B;AAAmC,IAAA,GAAG,EAAElB,KAAK,CAACiB,IAAN,CAAWE,GAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASL,WAAW,CAACE,KAArB,CADF,CADF,EAIE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBD,OAApB,CAJF,EAKE,MAAC,QAAD;AAAU,IAAA,IAAI,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CADF,CAPF,CADF;AAuBD;MA1BuBH,I","sourcesContent":["import Head from \"next/head\";\nimport renderToString from \"next-mdx-remote/render-to-string\";\nimport hydrate from \"next-mdx-remote/hydrate\";\nimport matter from \"gray-matter\";\nimport { Atoms } from \"@/system\";\nimport postsData from \"../../utils/index.js\";\nimport { Header, Layout, Footer } from \"@/components\";\nimport { Grid, GridItem } from \"@/system\";\nimport siteData from \"../../data/site.js\";\nimport { components as AllComponents } from \"@/system/DesignSystemProvider\";\nimport styled from \"@emotion/styled\";\n\nconst Page = styled.article`\n  max-width: calc(var(--font-size) * 48);\n`;\n\nconst components = AllComponents;\n\nexport default function Post({ source, frontMatter }: any) {\n  const content = hydrate(source, { components });\n\n  return (\n    <>\n      <Head>\n        <title>\n          {siteData.title} — {frontMatter.title}\n        </title>\n      </Head>\n\n      <Layout showTitle={true}>\n        <Page>\n          <Grid columns={Atoms.grid.columns} gap={Atoms.grid.gap}>\n            <GridItem span={6}>\n              <Header>{frontMatter.title}</Header>\n            </GridItem>\n            <GridItem span={6}>{content}</GridItem>\n            <GridItem span={6}>\n              <Footer />\n            </GridItem>\n          </Grid>\n        </Page>\n      </Layout>\n    </>\n  );\n}\n\nexport const getStaticPaths = async () => {\n  const paths = Array.from(postsData.values()).map((post) => {\n    return {\n      params: {\n        slug: post.slug.split(\"/\"),\n      },\n    };\n  });\n\n  return {\n    paths,\n    fallback: false,\n  };\n};\n\nexport async function getStaticProps({ params }: any) {\n  const postKey = params.slug.join(\"/\");\n  const source = postsData.get(postKey);\n  const { data, content } = matter(source);\n\n  const mdxSource = await renderToString(content, {\n    components,\n    scope: data,\n  });\n\n  return {\n    props: {\n      source: mdxSource,\n      frontMatter: source.frontMatter,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}