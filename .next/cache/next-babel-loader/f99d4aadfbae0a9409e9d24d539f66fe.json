{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/seanblanton/Documents/Sites/blanton/components/system/Code.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  &:after {\\n    background: red;\\n    opacity: 0.7;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport Atoms from \"@/system/atoms\";\nimport paleNight from \"prism-react-renderer/themes/paleNight\";\nimport styled from \"@emotion/styled\";\nvar Container = styled.pre(_templateObject());\n_c = Container;\nexport default function Code(props) {\n  var _this = this;\n\n  var children = props.children,\n      className = props.className;\n  var language = className === null || className === void 0 ? void 0 : className.replace(/language-/, \"\");\n  return __jsx(Highlight, _extends({}, defaultProps, {\n    theme: paleNight,\n    code: children,\n    language: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), function (_ref) {\n    var className = _ref.className,\n        style = _ref.style,\n        tokens = _ref.tokens,\n        getLineProps = _ref.getLineProps,\n        getTokenProps = _ref.getTokenProps;\n    return __jsx(Container, {\n      className: className,\n      style: _objectSpread(_objectSpread({}, style), {}, {\n        borderRadius: 16,\n        padding: Atoms.spacing.medium\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, tokens.map(function (line, i) {\n      return __jsx(\"div\", _extends({\n        key: i\n      }, getLineProps({\n        line: line,\n        key: i\n      }), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }), line.map(function (token, key) {\n        return __jsx(\"span\", _extends({\n          key: key\n        }, getTokenProps({\n          token: token,\n          key: key\n        }), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }\n        }));\n      }));\n    }));\n  });\n}\n_c2 = Code;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Code\");","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/components/system/Code.tsx"],"names":["Highlight","defaultProps","Atoms","paleNight","styled","Container","pre","Code","props","children","className","language","replace","style","tokens","getLineProps","getTokenProps","borderRadius","padding","spacing","medium","map","line","i","key","token"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,SAAS,GAAGD,MAAM,CAACE,GAAV,mBAAf;KAAMD,S;AAON,eAAe,SAASE,IAAT,CAAcC,KAAd,EAA0B;AAAA;;AAAA,MAC/BC,QAD+B,GACPD,KADO,CAC/BC,QAD+B;AAAA,MACrBC,SADqB,GACPF,KADO,CACrBE,SADqB;AAEvC,MAAMC,QAAQ,GAAGD,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEE,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,CAAjB;AAEA,SACE,MAAC,SAAD,eACMX,YADN;AAEE,IAAA,KAAK,EAAEE,SAFT;AAGE,IAAA,IAAI,EAAEM,QAHR;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMG;AAAA,QAAGD,SAAH,QAAGA,SAAH;AAAA,QAAcG,KAAd,QAAcA,KAAd;AAAA,QAAqBC,MAArB,QAAqBA,MAArB;AAAA,QAA6BC,YAA7B,QAA6BA,YAA7B;AAAA,QAA2CC,aAA3C,QAA2CA,aAA3C;AAAA,WACC,MAAC,SAAD;AACE,MAAA,SAAS,EAAEN,SADb;AAEE,MAAA,KAAK,kCACAG,KADA;AAEHI,QAAAA,YAAY,EAAE,EAFX;AAGHC,QAAAA,OAAO,EAAEhB,KAAK,CAACiB,OAAN,CAAcC;AAHpB,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGN,MAAM,CAACO,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP;AAAA,aACV;AAAK,QAAA,GAAG,EAAEA;AAAV,SAAiBR,YAAY,CAAC;AAAEO,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,GAAG,EAAED;AAAb,OAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGD,IAAI,CAACD,GAAL,CAAS,UAACI,KAAD,EAAQD,GAAR;AAAA,eACR;AAAM,UAAA,GAAG,EAAEA;AAAX,WAAoBR,aAAa,CAAC;AAAES,UAAAA,KAAK,EAALA,KAAF;AAASD,UAAAA,GAAG,EAAHA;AAAT,SAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADQ;AAAA,OAAT,CADH,CADU;AAAA,KAAX,CARH,CADD;AAAA,GANH,CADF;AA2BD;MA/BuBjB,I","sourcesContent":["import Highlight, { defaultProps } from \"prism-react-renderer\";\nimport Atoms from \"@/system/atoms\";\nimport paleNight from \"prism-react-renderer/themes/paleNight\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.pre`\n  &:after {\n    background: red;\n    opacity: 0.7;\n  }\n`;\n\nexport default function Code(props: any) {\n  const { children, className } = props;\n  const language = className?.replace(/language-/, \"\");\n\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={paleNight}\n      code={children}\n      language={language}\n    >\n      {({ className, style, tokens, getLineProps, getTokenProps }) => (\n        <Container\n          className={className}\n          style={{\n            ...style,\n            borderRadius: 16,\n            padding: Atoms.spacing.medium,\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </Container>\n      )}\n    </Highlight>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}