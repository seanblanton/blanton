{"ast":null,"code":"var _jsxFileName = \"/Users/seanblanton/Documents/Sites/blanton/pages/blog/[...slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport renderToString from \"next-mdx-remote/render-to-string\";\nimport hydrate from \"next-mdx-remote/hydrate\";\nimport matter from \"gray-matter\";\nimport { Atoms } from \"@/system\";\nimport postsData from \"../../utils/index.js\";\nimport { Header, Layout, Footer } from \"@/components\";\nimport { Grid, GridItem } from \"@/system\";\nimport siteData from \"../../data/site.js\";\nimport { components as AllComponents } from \"@/system/DesignSystemProvider\";\nimport styled from \"@emotion/styled\";\nconst Page = styled.article`\n\tmax-width: calc(var(--font-size) * 48);\n`;\nconst components = AllComponents;\nexport default function Post({\n  source,\n  frontMatter\n}) {\n  const content = hydrate(source, {\n    components\n  });\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, siteData.title, \" \\u2014\\xA0\", frontMatter.title)), __jsx(Layout, {\n    showTitle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }, __jsx(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    columns: Atoms.grid.columns,\n    gap: Atoms.grid.gap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  }, __jsx(GridItem, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }\n  }, frontMatter.title)), __jsx(GridItem, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, content), __jsx(GridItem, {\n    span: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }\n  }))))));\n}\nexport const getStaticPaths = async () => {\n  const paths = Array.from(postsData.values()).map(post => {\n    return {\n      params: {\n        slug: post.slug.split(\"/\")\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport async function getStaticProps({\n  params\n}) {\n  const postKey = params.slug.join(\"/\");\n  const source = postsData.get(postKey);\n  const {\n    data,\n    content\n  } = matter(source);\n  const mdxSource = await renderToString(content, {\n    components,\n    scope: data\n  });\n  return {\n    props: {\n      source: mdxSource,\n      frontMatter: source.frontMatter\n    }\n  };\n}","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/pages/blog/[...slug].tsx"],"names":["Head","renderToString","hydrate","matter","Atoms","postsData","Header","Layout","Footer","Grid","GridItem","siteData","components","AllComponents","styled","Page","article","Post","source","frontMatter","content","title","grid","columns","gap","getStaticPaths","paths","Array","from","values","map","post","params","slug","split","fallback","getStaticProps","postKey","join","get","data","mdxSource","scope","props"],"mappings":"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","sourcesContent":["import Head from \"next/head\";\nimport renderToString from \"next-mdx-remote/render-to-string\";\nimport hydrate from \"next-mdx-remote/hydrate\";\nimport matter from \"gray-matter\";\nimport { Atoms } from \"@/system\";\nimport postsData from \"../../utils/index.js\";\nimport { Header, Layout, Footer } from \"@/components\";\nimport { Grid, GridItem } from \"@/system\";\nimport siteData from \"../../data/site.js\";\nimport { components as AllComponents } from \"@/system/DesignSystemProvider\";\nimport styled from \"@emotion/styled\";\n\nconst Page = styled.article`\n\tmax-width: calc(var(--font-size) * 48);\n`;\n\nconst components = AllComponents;\n\nexport default function Post({ source, frontMatter }: any) {\n\tconst content = hydrate(source, { components });\n\n\treturn (\n\t\t<>\n\t\t\t<Head>\n\t\t\t\t<title>\n\t\t\t\t\t{siteData.title} — {frontMatter.title}\n\t\t\t\t</title>\n\t\t\t</Head>\n\n\t\t\t<Layout showTitle={true}>\n\t\t\t\t<Page>\n\t\t\t\t\t<Grid columns={Atoms.grid.columns} gap={Atoms.grid.gap}>\n\t\t\t\t\t\t<GridItem span={6}>\n\t\t\t\t\t\t\t<Header>{frontMatter.title}</Header>\n\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t\t<GridItem span={6}>{content}</GridItem>\n\t\t\t\t\t\t<GridItem span={6}>\n\t\t\t\t\t\t\t<Footer />\n\t\t\t\t\t\t</GridItem>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Page>\n\t\t\t</Layout>\n\t\t</>\n\t);\n}\n\nexport const getStaticPaths = async () => {\n\tconst paths = Array.from(postsData.values()).map((post) => {\n\t\treturn {\n\t\t\tparams: {\n\t\t\t\tslug: post.slug.split(\"/\"),\n\t\t\t},\n\t\t};\n\t});\n\n\treturn {\n\t\tpaths,\n\t\tfallback: false,\n\t};\n};\n\nexport async function getStaticProps({ params }: any) {\n\tconst postKey = params.slug.join(\"/\");\n\tconst source = postsData.get(postKey);\n\tconst { data, content } = matter(source);\n\n\tconst mdxSource = await renderToString(content, {\n\t\tcomponents,\n\t\tscope: data,\n\t});\n\n\treturn {\n\t\tprops: {\n\t\t\tsource: mdxSource,\n\t\t\tfrontMatter: source.frontMatter,\n\t\t},\n\t};\n}\n"]},"metadata":{},"sourceType":"module"}