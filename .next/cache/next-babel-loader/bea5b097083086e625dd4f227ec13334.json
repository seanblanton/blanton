{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/Layout\";\nimport { postsData } from \"../utils/index.js\";\nimport siteData from \"../data/site.js\";\nimport { default as externalPostData } from \"../data/externalPosts.js\";\nimport { Header } from \"@/components\";\nimport { About, BookList, PostList, Footer } from \"@/components\";\nimport { Grid, GridItem } from \"@/system\";\nimport Atoms from \"@/system/atoms\";\n\nconst IndexPage = ({\n  posts\n}) => __jsx(Layout, null, __jsx(Grid, {\n  columns: Atoms.grid.columns,\n  gap: Atoms.grid.gap\n}, __jsx(GridItem, {\n  span: 5\n}, __jsx(Header, null, siteData.title, \" \\u2014\\xA0\", siteData.role)), __jsx(GridItem, {\n  span: Atoms.grid.gridSection\n}, __jsx(PostList, {\n  data: posts\n})), __jsx(GridItem, {\n  span: Atoms.grid.gridSection\n}, __jsx(About, null)), __jsx(GridItem, {\n  span: Atoms.grid.gridSection\n}, __jsx(BookList, null)), __jsx(GridItem, {\n  span: 6\n}, __jsx(Footer, null))));\n\nexport default IndexPage;\nexport async function getStaticProps() {\n  const internalPosts = Array.from(postsData.values());\n  const externalPosts = externalPostData.map(post => {\n    const options = {\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\"\n    };\n    const formattedDate = new Date(post.date).toLocaleDateString(\"en-IN\", options);\n    return {\n      frontMatter: _objectSpread(_objectSpread({}, post), {}, {\n        date: formattedDate\n      })\n    };\n  });\n  const posts = [...internalPosts, ...externalPosts].sort((a, b) => {\n    return Number(new Date(b.frontMatter.date).getTime() - Number(new Date(a.frontMatter.date).getTime()));\n  }).filter(post => !post.frontMatter.private);\n  return {\n    props: {\n      posts\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}