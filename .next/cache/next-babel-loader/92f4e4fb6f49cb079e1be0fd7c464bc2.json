{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from \"react\";\nimport useLocalStorage from \"@/utils/useLocalStorage\";\nvar DEFAULT_MODE = \"light\";\nvar DEFAULT_THEME = \"autumn\";\nexport var ThemeContext = /*#__PURE__*/React.createContext({});\n\nvar ThemeProvider = function ThemeProvider(_ref) {\n  var children = _ref.children;\n\n  var _useLocalStorage = useLocalStorage(\"mode\", DEFAULT_MODE),\n      _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n      mode = _useLocalStorage2[0],\n      setMode = _useLocalStorage2[1];\n\n  var _useLocalStorage3 = useLocalStorage(\"theme\", DEFAULT_THEME),\n      _useLocalStorage4 = _slicedToArray(_useLocalStorage3, 2),\n      theme = _useLocalStorage4[0],\n      setTheme = _useLocalStorage4[1];\n\n  var toggleMode = function toggleMode() {\n    mode === \"light\" ? setMode(\"dark\") : setMode(\"light\");\n  };\n\n  function toggleTheme(name) {\n    setTheme(name);\n  }\n\n  var updateTheme = function updateTheme() {\n    var currentTheme = \"\".concat(theme, \"-\").concat(mode);\n    document.documentElement.className = currentTheme;\n  };\n\n  useEffect(function () {\n    updateTheme();\n  });\n  return __jsx(ThemeContext.Provider, {\n    value: {\n      theme: theme,\n      mode: mode,\n      toggleTheme: toggleTheme,\n      toggleMode: toggleMode\n    }\n  }, children);\n};\n\nexport default ThemeProvider;\nexport var useThemeContext = function useThemeContext() {\n  return useContext(ThemeContext);\n};","map":null,"metadata":{},"sourceType":"module"}