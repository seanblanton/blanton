{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nexport default function useLocalStorage(key, initialValue) {\n  let value = initialValue;\n  const {\n    0: storedValue,\n    1: setStoredValue\n  } = useState(value);\n  useEffect(() => {\n    const item = window.localStorage.getItem(key);\n    const itemToStore = item ? JSON.parse(item) : initialValue;\n    setStoredValue(itemToStore);\n  }, []);\n\n  const setValue = value => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    window.localStorage.setItem(key, JSON.stringify(valueToStore));\n  };\n\n  return [storedValue, setValue];\n}","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/utils/useLocalStorage.js"],"names":["React","useEffect","useState","useLocalStorage","key","initialValue","value","storedValue","setStoredValue","item","window","localStorage","getItem","itemToStore","JSON","parse","setValue","valueToStore","Function","setItem","stringify"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AACzD,MAAIC,KAAK,GAAGD,YAAZ;AACA,QAAM;AAAA,OAACE,WAAD;AAAA,OAAcC;AAAd,MAAgCN,QAAQ,CAACI,KAAD,CAA9C;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMQ,IAAI,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BR,GAA5B,CAAb;AACA,UAAMS,WAAW,GAAIJ,IAAI,GAAGK,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAH,GAAsBJ,YAA/C;AACAG,IAAAA,cAAc,CAACK,WAAD,CAAd;AACD,GAJQ,EAIN,EAJM,CAAT;;AAOA,QAAMG,QAAQ,GAAIV,KAAD,IAAW;AAC1B,UAAMW,YAAY,GAAGX,KAAK,YAAYY,QAAjB,GAA4BZ,KAAK,CAACC,WAAD,CAAjC,GAAiDD,KAAtE;AACAE,IAAAA,cAAc,CAACS,YAAD,CAAd;AACAP,IAAAA,MAAM,CAACC,YAAP,CAAoBQ,OAApB,CAA4Bf,GAA5B,EAAiCU,IAAI,CAACM,SAAL,CAAeH,YAAf,CAAjC;AACD,GAJD;;AAMA,SAAO,CAACV,WAAD,EAAcS,QAAd,CAAP;AACD","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  let value = initialValue; \n  const [storedValue, setStoredValue] = useState(value);\n\n  useEffect(() => {\n    const item = window.localStorage.getItem(key);\n    const itemToStore =  item ? JSON.parse(item) : initialValue;\n    setStoredValue(itemToStore);\n  }, []);\n\n\n  const setValue = (value) => {\n    const valueToStore = value instanceof Function ? value(storedValue) : value;\n    setStoredValue(valueToStore);\n    window.localStorage.setItem(key, JSON.stringify(valueToStore));\n  };\n\n  return [storedValue, setValue];\n}\n"]},"metadata":{},"sourceType":"module"}