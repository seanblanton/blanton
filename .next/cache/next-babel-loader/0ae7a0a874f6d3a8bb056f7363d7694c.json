{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/seanblanton/Documents/Sites/blanton/components/system/Code.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  overflow: hidden;\\n  &:after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n    background: var(--accent-color);\\n    opacity: var(--accent-opacity);\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport Atoms from \"@/system/atoms\";\nimport paleNight from \"prism-react-renderer/themes/paleNight\";\nimport styled from \"@emotion/styled\";\nvar Wrapper = styled.pre(_templateObject());\n_c = Wrapper;\nexport default function Code(props) {\n  var _this = this;\n\n  var children = props.children,\n      className = props.className;\n  var language = className === null || className === void 0 ? void 0 : className.replace(/language-/, \"\");\n  return __jsx(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Highlight, _extends({}, defaultProps, {\n    theme: paleNight,\n    code: children,\n    language: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), function (_ref) {\n    var className = _ref.className,\n        _ref$style = _ref.style,\n        backgroundColor = _ref$style.backgroundColor,\n        otherStyles = _objectWithoutProperties(_ref$style, [\"backgroundColor\"]),\n        tokens = _ref.tokens,\n        getLineProps = _ref.getLineProps,\n        getTokenProps = _ref.getTokenProps;\n\n    return __jsx(\"pre\", {\n      className: className,\n      style: _objectSpread(_objectSpread({}, otherStyles), {}, {\n        borderRadius: 16,\n        padding: Atoms.spacing.medium\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, tokens.map(function (line, i) {\n      return __jsx(\"div\", _extends({\n        key: i\n      }, getLineProps({\n        line: line,\n        key: i\n      }), {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      }), line.map(function (token, key) {\n        return __jsx(\"span\", _extends({\n          key: key\n        }, getTokenProps({\n          token: token,\n          key: key\n        }), {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 19\n          }\n        }));\n      }));\n    }));\n  }));\n}\n_c2 = Code;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Code\");","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/components/system/Code.tsx"],"names":["Highlight","defaultProps","Atoms","paleNight","styled","Wrapper","pre","Code","props","children","className","language","replace","style","backgroundColor","otherStyles","tokens","getLineProps","getTokenProps","borderRadius","padding","spacing","medium","map","line","i","key","token"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb;KAAMD,O;AAeN,eAAe,SAASE,IAAT,CAAcC,KAAd,EAA0B;AAAA;;AAAA,MAC/BC,QAD+B,GACPD,KADO,CAC/BC,QAD+B;AAAA,MACrBC,SADqB,GACPF,KADO,CACrBE,SADqB;AAEvC,MAAMC,QAAQ,GAAGD,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEE,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,CAAjB;AAEA,SACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eACMX,YADN;AAEE,IAAA,KAAK,EAAEE,SAFT;AAGE,IAAA,IAAI,EAAEM,QAHR;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMG;AAAA,QACCD,SADD,QACCA,SADD;AAAA,0BAECG,KAFD;AAAA,QAEUC,eAFV,cAEUA,eAFV;AAAA,QAE8BC,WAF9B;AAAA,QAGCC,MAHD,QAGCA,MAHD;AAAA,QAICC,YAJD,QAICA,YAJD;AAAA,QAKCC,aALD,QAKCA,aALD;;AAAA,WAOC;AACE,MAAA,SAAS,EAAER,SADb;AAEE,MAAA,KAAK,kCACAK,WADA;AAEHI,QAAAA,YAAY,EAAE,EAFX;AAGHC,QAAAA,OAAO,EAAElB,KAAK,CAACmB,OAAN,CAAcC;AAHpB,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGN,MAAM,CAACO,GAAP,CAAW,UAACC,IAAD,EAAOC,CAAP;AAAA,aACV;AAAK,QAAA,GAAG,EAAEA;AAAV,SAAiBR,YAAY,CAAC;AAAEO,QAAAA,IAAI,EAAJA,IAAF;AAAQE,QAAAA,GAAG,EAAED;AAAb,OAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACGD,IAAI,CAACD,GAAL,CAAS,UAACI,KAAD,EAAQD,GAAR;AAAA,eACR;AAAM,UAAA,GAAG,EAAEA;AAAX,WAAoBR,aAAa,CAAC;AAAES,UAAAA,KAAK,EAALA,KAAF;AAASD,UAAAA,GAAG,EAAHA;AAAT,SAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADQ;AAAA,OAAT,CADH,CADU;AAAA,KAAX,CARH,CAPD;AAAA,GANH,CADF,CADF;AAmCD;MAvCuBnB,I","sourcesContent":["import Highlight, { defaultProps } from \"prism-react-renderer\";\nimport Atoms from \"@/system/atoms\";\nimport paleNight from \"prism-react-renderer/themes/paleNight\";\nimport styled from \"@emotion/styled\";\n\nconst Wrapper = styled.pre`\n  position: relative;\n  overflow: hidden;\n  &:after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background: var(--accent-color);\n    opacity: var(--accent-opacity);\n  }\n`;\n\nexport default function Code(props: any) {\n  const { children, className } = props;\n  const language = className?.replace(/language-/, \"\");\n\n  return (\n    <Wrapper>\n      <Highlight\n        {...defaultProps}\n        theme={paleNight}\n        code={children}\n        language={language}\n      >\n        {({\n          className,\n          style: { backgroundColor, ...otherStyles },\n          tokens,\n          getLineProps,\n          getTokenProps,\n        }) => (\n          <pre\n            className={className}\n            style={{\n              ...otherStyles,\n              borderRadius: 16,\n              padding: Atoms.spacing.medium,\n            }}\n          >\n            {tokens.map((line, i) => (\n              <div key={i} {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span key={key} {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </pre>\n        )}\n      </Highlight>\n    </Wrapper>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}