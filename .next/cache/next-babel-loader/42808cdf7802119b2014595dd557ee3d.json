{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport renderToString from \"next-mdx-remote/render-to-string\";\nimport hydrate from \"next-mdx-remote/hydrate\";\nimport matter from \"gray-matter\";\nimport { Atoms } from \"@/system\";\nimport postsData from \"../../utils/index.js\";\nimport { Header, Layout, Footer } from \"@/components\";\nimport { Grid, GridItem } from \"@/system\";\nimport siteData from \"../../data/site.js\";\nimport { components as AllComponents } from \"@/system/DesignSystemProvider\";\nimport styled from \"@emotion/styled\";\nconst Page = styled.article`\n  max-width: calc(var(--font-size) * 48);\n`;\nconst components = AllComponents;\nexport default function Post({\n  source,\n  frontMatter\n}) {\n  const content = hydrate(source, {\n    components\n  });\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, siteData.title, \" \\u2014\\xA0\", frontMatter.title)), __jsx(Layout, {\n    showTitle: true\n  }, __jsx(Page, null, __jsx(Grid, {\n    columns: Atoms.grid.columns,\n    gap: Atoms.grid.gap\n  }, __jsx(GridItem, {\n    span: 6\n  }, __jsx(Header, null, frontMatter.title)), __jsx(GridItem, {\n    span: 6\n  }, content), __jsx(GridItem, {\n    span: 6\n  }, __jsx(Footer, null))))));\n}\nexport const getStaticPaths = async () => {\n  const paths = Array.from(postsData.values()).map(post => {\n    return {\n      params: {\n        slug: post.slug.split(\"/\")\n      }\n    };\n  });\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport async function getStaticProps({\n  params\n}) {\n  const postKey = params.slug.join(\"/\");\n  const source = postsData.get(postKey);\n  const {\n    data,\n    content\n  } = matter(source);\n  const mdxSource = await renderToString(content, {\n    components,\n    scope: data\n  });\n  return {\n    props: {\n      source: mdxSource,\n      frontMatter: source.frontMatter\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}