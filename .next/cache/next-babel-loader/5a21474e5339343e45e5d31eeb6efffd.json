{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/seanblanton/Documents/Sites/blanton/components/PostList.tsx\";\n\nvar __jsx = React.createElement;\nimport * as React from \"react\";\nimport { H3, Link, Grid, P } from \"@/system\";\nimport { GridSection } from \"@/components\";\n\nvar PostList = function PostList(_ref) {\n  var posts = _ref.data;\n  return __jsx(GridSection, {\n    title: \"Writing\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 3\n    }\n  }, __jsx(Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, posts.map(function (_ref2) {\n    var slug = _ref2.slug,\n        _ref2$frontMatter = _ref2.frontMatter,\n        title = _ref2$frontMatter.title,\n        excerpt = _ref2$frontMatter.excerpt,\n        url = _ref2$frontMatter.url;\n\n    if (url) {\n      return __jsx(\"div\", {\n        key: title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }\n      }, __jsx(Link, {\n        href: url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }\n      }, __jsx(Grid, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }\n      }, __jsx(H3, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 19\n        }\n      }, title), __jsx(P, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }\n      }, excerpt))));\n    } else {\n      return __jsx(\"div\", {\n        key: slug,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, __jsx(Link, {\n        as: \"/blog/\".concat(slug),\n        href: \"/blog/\".concat(slug),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, __jsx(Grid, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, __jsx(H3, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }\n      }, \" \", title), __jsx(P, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, excerpt))));\n    }\n  })));\n};\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/components/PostList.tsx"],"names":["React","H3","Link","Grid","P","GridSection","PostList","posts","data","map","slug","frontMatter","title","excerpt","url"],"mappings":";;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,EAAT,EAAaC,IAAb,EAAmBC,IAAnB,EAAyBC,CAAzB,QAAkC,UAAlC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AAMA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAASC,KAAT,QAAGC,IAAH;AAAA,SACf,MAAC,WAAD;AAAa,IAAA,KAAK,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,GAAN,CAAU,iBAAoD;AAAA,QAAjDC,IAAiD,SAAjDA,IAAiD;AAAA,kCAA3CC,WAA2C;AAAA,QAA5BC,KAA4B,qBAA5BA,KAA4B;AAAA,QAArBC,OAAqB,qBAArBA,OAAqB;AAAA,QAAZC,GAAY,qBAAZA,GAAY;;AAC7D,QAAIA,GAAJ,EAAS;AACP,aACE;AAAK,QAAA,GAAG,EAAEF,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAEE,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,KAAL,CADF,EAEE,MAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,OAAJ,CAFF,CADF,CADF,CADF;AAUD,KAXD,MAWO;AACL,aACE;AAAK,QAAA,GAAG,EAAEH,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,EAAE,kBAAWA,IAAX,CAAR;AAA2B,QAAA,IAAI,kBAAWA,IAAX,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,EAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAME,KAAN,CADF,EAEE,MAAC,CAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,OAAJ,CAFF,CADF,CADF,CADF;AAUD;AACF,GAxBA,CADH,CADF,CADe;AAAA,CAAjB;;KAAMP,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import * as React from \"react\";\nimport { Post } from \"../interfaces\";\nimport { H3, Link, Grid, P } from \"@/system\";\nimport { GridSection } from \"@/components\";\n\ntype Props = {\n  data: Post[];\n};\n\nconst PostList = ({ data: posts }: Props) => (\n  <GridSection title='Writing'>\n    <Grid>\n      {posts.map(({ slug, frontMatter: { title, excerpt, url } }) => {\n        if (url) {\n          return (\n            <div key={title}>\n              <Link href={url}>\n                <Grid>\n                  <H3>{title}</H3>\n                  <P>{excerpt}</P>\n                </Grid>\n              </Link>\n            </div>\n          );\n        } else {\n          return (\n            <div key={slug}>\n              <Link as={`/blog/${slug}`} href={`/blog/${slug}`}>\n                <Grid>\n                  <H3> {title}</H3>\n                  <P>{excerpt}</P>\n                </Grid>\n              </Link>\n            </div>\n          );\n        }\n      })}\n    </Grid>\n  </GridSection>\n);\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}