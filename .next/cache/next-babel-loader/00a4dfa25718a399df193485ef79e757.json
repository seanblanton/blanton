{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport theme from \"./theme\";\nvar unit = 1.25;\nvar measure = {\n  xs: \"28ch\",\n  s: \"45ch\",\n  m: \"55ch\",\n  l: \"65ch\",\n  xl: \"75ch\"\n};\nvar scale = {\n  xxsmall: 0.25,\n  xsmall: 0.5,\n  small: 0.75,\n  medium: 1,\n  large: 1.5,\n  xlarge: 3,\n  xxlarge: 4\n};\nexport default {\n  unit: unit,\n  breakpoints: {\n    small: \"24em\",\n    medium: \"40em\",\n    large: \"56em\"\n  },\n  borderRadius: {\n    small: \"\".concat(scale.small, \"rem\"),\n    medium: \"\".concat(scale.medium, \"rem\"),\n    large: \"\".concat(scale.large, \"rem\"),\n    xlarge: \"\".concat(scale.xlarge, \"rem\")\n  },\n  font: {\n    family: {\n      sans: \"Raleway, -apple-system, system-ui, BlinkMacSystemFont, sans-serif\",\n      mono: \"Consolas, Monaco,'Lucida Console', 'Liberation Mono', 'Monaco', monospace\"\n    },\n    lineHeight: {\n      header: 1.15,\n      body: 1.5\n    },\n    size: {\n      small: \"\".concat(scale.small, \"rem\"),\n      medium: \"\".concat(scale.medium, \"rem\"),\n      large: \"\".concat(scale.large, \"rem\"),\n      xlarge: \"\".concat(scale.xlarge, \"rem\")\n    },\n    weight: {\n      normal: 400,\n      semi: 600,\n      bold: 700\n    }\n  },\n  grid: {\n    gap: \"var(--grid-column-gap)\",\n    columns: \"var(--grid-template-columns)\",\n    gridSection: \"var(--grid-section)\"\n  },\n  measure: measure,\n  scale: scale,\n  spacing: Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.keys(scale).map(function (n) {\n    return _defineProperty({}, n, \"\".concat(unit * scale[n], \"rem\"));\n  })))),\n  color: theme\n};","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/components/system/atoms.ts"],"names":["theme","unit","measure","xs","s","m","l","xl","scale","xxsmall","xsmall","small","medium","large","xlarge","xxlarge","breakpoints","borderRadius","font","family","sans","mono","lineHeight","header","body","size","weight","normal","semi","bold","grid","gap","columns","gridSection","spacing","Object","assign","keys","map","n","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,IAAMC,IAAI,GAAG,IAAb;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,EAAE,EAAE,MADU;AAEdC,EAAAA,CAAC,EAAE,MAFW;AAGdC,EAAAA,CAAC,EAAE,MAHW;AAIdC,EAAAA,CAAC,EAAE,MAJW;AAKdC,EAAAA,EAAE,EAAE;AALU,CAAhB;AAQA,IAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE,IADG;AAEZC,EAAAA,MAAM,EAAE,GAFI;AAGZC,EAAAA,KAAK,EAAE,IAHK;AAIZC,EAAAA,MAAM,EAAE,CAJI;AAKZC,EAAAA,KAAK,EAAE,GALK;AAMZC,EAAAA,MAAM,EAAE,CANI;AAOZC,EAAAA,OAAO,EAAE;AAPG,CAAd;AAUA,eAAe;AACbd,EAAAA,IAAI,EAAJA,IADa;AAEbe,EAAAA,WAAW,EAAE;AACXL,IAAAA,KAAK,QADM;AAEXC,IAAAA,MAAM,QAFK;AAGXC,IAAAA,KAAK,EAAE;AAHI,GAFA;AAObI,EAAAA,YAAY,EAAE;AACZN,IAAAA,KAAK,YAAKH,KAAK,CAACG,KAAX,QADO;AAEZC,IAAAA,MAAM,YAAKJ,KAAK,CAACI,MAAX,QAFM;AAGZC,IAAAA,KAAK,YAAKL,KAAK,CAACK,KAAX,QAHO;AAIZC,IAAAA,MAAM,YAAKN,KAAK,CAACM,MAAX;AAJM,GAPD;AAabI,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,mEADA;AAENC,MAAAA,IAAI,EACF;AAHI,KADJ;AAMJC,IAAAA,UAAU,EAAE;AACVC,MAAAA,MAAM,EAAE,IADE;AAEVC,MAAAA,IAAI,EAAE;AAFI,KANR;AAUJC,IAAAA,IAAI,EAAE;AACJd,MAAAA,KAAK,YAAKH,KAAK,CAACG,KAAX,QADD;AAEJC,MAAAA,MAAM,YAAKJ,KAAK,CAACI,MAAX,QAFF;AAGJC,MAAAA,KAAK,YAAKL,KAAK,CAACK,KAAX,QAHD;AAIJC,MAAAA,MAAM,YAAKN,KAAK,CAACM,MAAX;AAJF,KAVF;AAgBJY,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAE,GADF;AAENC,MAAAA,IAAI,EAAE,GAFA;AAGNC,MAAAA,IAAI,EAAE;AAHA;AAhBJ,GAbO;AAmCbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,GAAG,0BADC;AAEJC,IAAAA,OAAO,gCAFH;AAGJC,IAAAA,WAAW;AAHP,GAnCO;AAwCb/B,EAAAA,OAAO,EAAPA,OAxCa;AAyCbM,EAAAA,KAAK,EAALA,KAzCa;AA0Cb0B,EAAAA,OAAO,EAAEC,MAAM,CAACC,MAAP,OAAAD,MAAM,GACb,EADa,4BAETA,MAAM,CAACE,IAAP,CAAY7B,KAAZ,CAAD,CAAkD8B,GAAlD,CAAsD,UAACC,CAAD;AAAA,+BACtDA,CADsD,YAC/CtC,IAAI,GAAGO,KAAK,CAAC+B,CAAD,CADmC;AAAA,GAAtD,CAFU,GA1CF;AAgDbC,EAAAA,KAAK,EAAExC;AAhDM,CAAf","sourcesContent":["import theme from \"./theme\";\n\nconst unit = 1.25;\n\nconst measure = {\n  xs: \"28ch\",\n  s: \"45ch\",\n  m: \"55ch\",\n  l: \"65ch\",\n  xl: \"75ch\",\n};\n\nconst scale = {\n  xxsmall: 0.25,\n  xsmall: 0.5,\n  small: 0.75,\n  medium: 1,\n  large: 1.5,\n  xlarge: 3,\n  xxlarge: 4,\n};\n\nexport default {\n  unit,\n  breakpoints: {\n    small: `24em`,\n    medium: `40em`,\n    large: \"56em\",\n  },\n  borderRadius: {\n    small: `${scale.small}rem`,\n    medium: `${scale.medium}rem`,\n    large: `${scale.large}rem`,\n    xlarge: `${scale.xlarge}rem`, \n  },\n  font: {\n    family: {\n      sans: \"Raleway, -apple-system, system-ui, BlinkMacSystemFont, sans-serif\",\n      mono:\n        \"Consolas, Monaco,'Lucida Console', 'Liberation Mono', 'Monaco', monospace\",\n    },\n    lineHeight: {\n      header: 1.15,\n      body: 1.5,\n    },\n    size: {\n      small: `${scale.small}rem`,\n      medium: `${scale.medium}rem`,\n      large: `${scale.large}rem`,\n      xlarge: `${scale.xlarge}rem`,\n    },\n    weight: {\n      normal: 400,\n      semi: 600,\n      bold: 700,\n    }\n  },\n  grid: {\n    gap: `var(--grid-column-gap)`,\n    columns: `var(--grid-template-columns)`,\n    gridSection: `var(--grid-section)`,\n  },\n  measure,\n  scale,\n  spacing: Object.assign(\n    {},\n    ...(Object.keys(scale) as Array<keyof typeof scale>).map((n) => ({\n      [n]: `${unit * scale[n]}rem`,\n    }))\n  ),\n  color: theme,\n};\n"]},"metadata":{},"sourceType":"module"}