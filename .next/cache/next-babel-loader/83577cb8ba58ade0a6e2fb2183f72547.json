{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  overflow: hidden;\\n  &::after {\\n    content: \\\"\\\";\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n    background-color: var(--accent-color);\\n    opacity: var(--accent-opacity);\\n    z-index: -1;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport Atoms from \"@/system/atoms\";\nimport { default as palenight } from \"prism-react-renderer/themes/palenight\";\nimport styled from \"@emotion/styled\";\nvar Wrapper = styled.pre(_templateObject());\nexport default function Code(props) {\n  var children = props.children,\n      className = props.className;\n  var language = className === null || className === void 0 ? void 0 : className.replace(/language-/, \"\");\n  return __jsx(Highlight, _extends({}, defaultProps, {\n    theme: palenight,\n    code: children,\n    language: language\n  }), function (_ref) {\n    var className = _ref.className,\n        _ref$style = _ref.style,\n        backgroundColor = _ref$style.backgroundColor,\n        otherStyles = _objectWithoutProperties(_ref$style, [\"backgroundColor\"]),\n        tokens = _ref.tokens,\n        getLineProps = _ref.getLineProps,\n        getTokenProps = _ref.getTokenProps;\n\n    return __jsx(Wrapper, {\n      className: className,\n      style: _objectSpread(_objectSpread({\n        backgroundColor: \"transparent\"\n      }, otherStyles), {}, {\n        borderRadius: Atoms.borderRadius.medium,\n        padding: Atoms.spacing.medium\n      })\n    }, tokens.map(function (line, i) {\n      return __jsx(\"div\", _extends({\n        key: i\n      }, getLineProps({\n        line: line,\n        key: i\n      })), line.map(function (token, key) {\n        return __jsx(\"span\", _extends({\n          key: key\n        }, getTokenProps({\n          token: token,\n          key: key\n        })));\n      }));\n    }));\n  });\n}","map":null,"metadata":{},"sourceType":"module"}