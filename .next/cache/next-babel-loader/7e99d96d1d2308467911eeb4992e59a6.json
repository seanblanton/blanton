{"ast":null,"code":"var _jsxFileName = \"/Users/seanblanton/Documents/Sites/blanton/components/system/Code.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Highlight, { defaultProps } from \"prism-react-renderer\";\nimport Atoms from \"@/system/atoms\";\nimport paleNight from \"prism-react-renderer/themes/paleNight\";\nimport styled from \"@emotion/styled\";\nconst Wrapper = styled.pre`\n  position: relative;\n  overflow: hidden;\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: var(--accent-color);\n    opacity: var(--accent-opacity);\n  }\n`;\nexport default function Code(props) {\n  const {\n    children,\n    className\n  } = props;\n  const language = className === null || className === void 0 ? void 0 : className.replace(/language-/, \"\");\n  return __jsx(Highlight, _extends({}, defaultProps, {\n    theme: paleNight,\n    code: children,\n    language: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), (_ref) => {\n    let {\n      className,\n      style: {\n        backgroundColor\n      },\n      tokens,\n      getLineProps,\n      getTokenProps\n    } = _ref,\n        otherStyles = _objectWithoutProperties(_ref.style, [\"backgroundColor\"]);\n\n    return __jsx(Wrapper, {\n      className: className,\n      style: _objectSpread(_objectSpread({\n        backgroundColor: `transparent`\n      }, otherStyles), {}, {\n        borderRadius: 16,\n        padding: Atoms.spacing.medium\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, tokens.map((line, i) => __jsx(\"div\", _extends({\n      key: i\n    }, getLineProps({\n      line,\n      key: i\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), line.map((token, key) => __jsx(\"span\", _extends({\n      key: key\n    }, getTokenProps({\n      token,\n      key\n    }), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }))))));\n  });\n}","map":{"version":3,"sources":["/Users/seanblanton/Documents/Sites/blanton/components/system/Code.tsx"],"names":["Highlight","defaultProps","Atoms","paleNight","styled","Wrapper","pre","Code","props","children","className","language","replace","style","backgroundColor","tokens","getLineProps","getTokenProps","otherStyles","borderRadius","padding","spacing","medium","map","line","i","key","token"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,IAAoBC,YAApB,QAAwC,sBAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAA0B;AACvC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA0BF,KAAhC;AACA,QAAMG,QAAQ,GAAGD,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEE,OAAX,CAAmB,WAAnB,EAAgC,EAAhC,CAAjB;AAEA,SACE,MAAC,SAAD,eACMX,YADN;AAEE,IAAA,KAAK,EAAEE,SAFT;AAGE,IAAA,IAAI,EAAEM,QAHR;AAIE,IAAA,QAAQ,EAAEE,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMG;AAAA,QAAC;AACAD,MAAAA,SADA;AAEAG,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF,OAFP;AAGAC,MAAAA,MAHA;AAIAC,MAAAA,YAJA;AAKAC,MAAAA;AALA,KAAD;AAAA,QAE8BC,WAF9B,iCAECL,KAFD;;AAAA,WAOC,MAAC,OAAD;AACE,MAAA,SAAS,EAAEH,SADb;AAEE,MAAA,KAAK;AACHI,QAAAA,eAAe,EAAG;AADf,SAEAI,WAFA;AAGHC,QAAAA,YAAY,EAAE,EAHX;AAIHC,QAAAA,OAAO,EAAElB,KAAK,CAACmB,OAAN,CAAcC;AAJpB,QAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASGP,MAAM,CAACQ,GAAP,CAAW,CAACC,IAAD,EAAOC,CAAP,KACV;AAAK,MAAA,GAAG,EAAEA;AAAV,OAAiBT,YAAY,CAAC;AAAEQ,MAAAA,IAAF;AAAQE,MAAAA,GAAG,EAAED;AAAb,KAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGD,IAAI,CAACD,GAAL,CAAS,CAACI,KAAD,EAAQD,GAAR,KACR;AAAM,MAAA,GAAG,EAAEA;AAAX,OAAoBT,aAAa,CAAC;AAAEU,MAAAA,KAAF;AAASD,MAAAA;AAAT,KAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADD,CADH,CADD,CATH,CAPD;AAAA,GANH,CADF;AAkCD","sourcesContent":["import Highlight, { defaultProps } from \"prism-react-renderer\";\nimport Atoms from \"@/system/atoms\";\nimport paleNight from \"prism-react-renderer/themes/paleNight\";\nimport styled from \"@emotion/styled\";\n\nconst Wrapper = styled.pre`\n  position: relative;\n  overflow: hidden;\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    background-color: var(--accent-color);\n    opacity: var(--accent-opacity);\n  }\n`;\n\nexport default function Code(props: any) {\n  const { children, className } = props;\n  const language = className?.replace(/language-/, \"\");\n\n  return (\n    <Highlight\n      {...defaultProps}\n      theme={paleNight}\n      code={children}\n      language={language}\n    >\n      {({\n        className,\n        style: { backgroundColor, ...otherStyles },\n        tokens,\n        getLineProps,\n        getTokenProps,\n      }) => (\n        <Wrapper\n          className={className}\n          style={{\n            backgroundColor: `transparent`,\n            ...otherStyles,\n            borderRadius: 16,\n            padding: Atoms.spacing.medium,\n          }}\n        >\n          {tokens.map((line, i) => (\n            <div key={i} {...getLineProps({ line, key: i })}>\n              {line.map((token, key) => (\n                <span key={key} {...getTokenProps({ token, key })} />\n              ))}\n            </div>\n          ))}\n        </Wrapper>\n      )}\n    </Highlight>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}